function enableSubmitButton() { var e = document.getElementById("recaptcha-error"), e = (e && (e.style.display = "none"), new Event("change")); document.querySelector(".contact-form").dispatchEvent(e) } function disableSubmitButton() { var e = document.getElementById("submit-button"), t = document.getElementById("recaptcha-error"); e && (e.disabled = !0), t && (t.style.display = "block") } document.addEventListener("DOMContentLoaded", function () { let s = document.getElementById("submit-button"), d = document.getElementById("consent"), i = document.getElementById("contact_number"), u = document.getElementById("country_code"), n = document.getElementById("phone-validation-message"), m = document.getElementById("recaptcha-error"), a = { first_name: "First name is required", last_name: "Last name is required", email: "Please enter a valid email address", country_code: "Please select a country code", contact_number: "Phone number is required", country: "Please select a country", enquiry_type: "Please select an enquiry type", preferred_contact_method: "Please select a preferred contact method", consent: "You must agree to the terms to proceed" }; function c(e, t) { var o = e.name || e.id; let n, r; (n = (r = "consent" === o ? e.closest(".checkbox") : e.parentElement).querySelector(".field-error-message")) || ((n = document.createElement("div")).className = "field-error-message error-message", n.style.color = "#e74c3c", n.style.fontSize = "12px", n.style.marginTop = "5px", n.style.display = "block", r.appendChild(n)), n.textContent = t, n.style.display = "block", e.classList.add("error") } function y(e) { var t = e.name || e.id; let o; t = (o = "consent" === t ? e.closest(".checkbox") : e.parentElement).querySelector(".field-error-message"); t && t.remove(), e.classList.remove("error") } function p(e) { var t = e.name || e.id; let o = !0, n = ""; switch (y(e), t) { case "first_name": e.value.trim() || (o = !1, n = a.first_name); break; case "last_name": e.value.trim() || (o = !1, n = a.last_name); break; case "email": var r = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; e.value.trim() ? r.test(e.value.trim()) || (o = !1, n = a.email) : (o = !1, n = "Email is required"); break; case "country_code": e.value || (o = !1, n = a.country_code); break; case "contact_number": e.value.trim() || (o = !1, n = a.contact_number); break; case "country": e.value || (o = !1, n = a.country); break; case "enquiry_type": e.value || (o = !1, n = a.enquiry_type); break; case "consent": e.checked || (o = !1, n = a.consent) }return o || c(e, n), o } function v(t) { var e = document.querySelectorAll(`input[name="${t}"]`), e = Array.from(e).some(e => e.checked), o = document.querySelector(".form-group:has(.radio-options)"); if (e) return (n = (r = o).querySelector(".field-error-message")) && (n.style.display = "none"), r.classList.remove("error"), e; { var n = o, r = a[t]; let e = n.querySelector(".field-error-message"); e || ((e = document.createElement("div")).className = "field-error-message error-message", e.style.color = "#e74c3c", e.style.fontSize = "12px", e.style.marginTop = "5px", e.style.display = "block", n.appendChild(e)), e.textContent = r, e.style.display = "block", n.classList.add("error") } } document.querySelectorAll(".custom-select-wrapper").forEach(c => { let l = c.querySelector(".custom-select"), s = c.querySelector(".custom-options"), d = c.querySelectorAll(".custom-option"), i = c.querySelector('input[type="hidden"]'); l.addEventListener("click", e => { e.stopPropagation(), document.querySelectorAll(".custom-select-wrapper").forEach(e => { var t; e !== c && (t = e.querySelector(".custom-options"), e = e.querySelector(".custom-select"), t.classList.remove("active"), e.classList.remove("active")) }), s.classList.toggle("active"), l.classList.toggle("active") }), d.forEach(a => { a.addEventListener("click", e => { e.stopPropagation(); let t = a.getAttribute("data-value") || a.textContent.trim(); var e = a.getAttribute("data-short"), o = a.getAttribute("data-country-code"); let n = a.getAttribute("data-flag"); var r = a.getAttribute("data-code"); if (console.log("Option clicked:", { value: t, short: e, countryCode: o, flag: n, dataCode: r, element: a, allAttributes: Array.from(a.attributes).map(e => ({ name: e.name, value: e.value })) }), i && (i.value = t || r || o), c.classList.contains("country-select")) { let e = document.getElementById("selected-flag"); var r = document.getElementById("selected-country-name"); console.log("Country select - Elements found:"), console.log("Selected flag element:", e), console.log("Country name div:", r), console.log("Flag URL to set:", n), console.log("Country name to set:", t), r ? (console.log("Before update - Country name:", r.textContent), r.textContent = t, console.log("After update - Country name:", r.textContent)) : console.error("Country name update failed - Element not found"), e && n ? (console.log("Before update - Flag src:", e.src), (r = new Image).onload = function () { e.setAttribute("src", n), e.setAttribute("alt", t + " Flag"), e.src = n, e.alt = t + " Flag", console.log("After update - Flag src:", e.src), console.log("Flag updated successfully!") }, r.onerror = function () { console.error("Flag URL is invalid or cannot be loaded:", n) }, r.src = n) : (console.error("Flag update failed!"), console.error("Flag element found:", !!e), console.error("Flag URL provided:", !!n), console.error("Flag URL value:", n), r = a.querySelector("img"), e && r && (r = r.src, console.log("Fallback: Using img src from option:", r), e.src = r, e.alt = t + " Flag", console.log("Fallback flag update completed with:", r))) } else o && e ? (l.textContent = e, console.log("Updated phone code to:", e)) : (l.textContent = a.textContent.trim(), console.log("Updated select text to:", a.textContent.trim())); d.forEach(e => e.classList.remove("selected")), a.classList.add("selected"), s.classList.remove("active"), l.classList.remove("active"), i && (y(i), p(i)), f(), c.querySelector("#country_code") && g() }) }), document.addEventListener("click", e => { c.contains(e.target) || (s.classList.remove("active"), l.classList.remove("active")) }) }); var e = document.getElementById("country-search"), e = (e && (e.addEventListener("input", function () { let o = this.value.toLowerCase(); document.querySelectorAll(".country-options .custom-option").forEach(e => { var t = e.textContent.toLowerCase(); e.style.display = t.includes(o) ? "block" : "none" }) }), e.addEventListener("click", e => e.stopPropagation())), document.querySelector(".contact-form")); function g() { var e, t = u.value, o = i.value; return n.textContent = "", n.className = "validation-message", i.classList.remove("valid", "invalid"), t ? o.trim() ? void (t && o && ((e = new FormData).append("country_code", t), e.append("phone_number", o), e.append("csrfmiddlewaretoken", document.querySelector("[name=csrfmiddlewaretoken]").value), fetch("/validate-phone/", { method: "POST", body: e, headers: { "X-Requested-With": "XMLHttpRequest" } }).then(e => e.json()).then(e => { e.valid ? (n.classList.add("valid"), i.classList.add("valid"), i.classList.remove("invalid"), y(i)) : (n.textContent = "Invalid phone number for selected country code", n.classList.add("invalid"), i.classList.add("invalid"), i.classList.remove("valid"), c(i, "Invalid phone number for selected country code")), f() }).catch(e => { console.error("Phone validation error:", e), c(i, "Error validating phone number") }))) : (c(i, a.contact_number), !1) : (c(u, a.country_code), !1) } function f() { var e = document.querySelector('input[name="first_name"]'), t = document.querySelector('input[name="last_name"]'), o = document.querySelector('input[name="email"]'), n = document.getElementById("country"), r = document.getElementById("enquiry_type"), a = (document.querySelector('input[name="preferred_contact_method"]:checked'), i.classList.contains("valid")), c = grecaptcha && grecaptcha.getResponse && grecaptcha.getResponse(); let l = !0; p(e) || (l = !1), p(t) || (l = !1), p(o) || (l = !1), p(n) || (l = !1), p(r) || (l = !1), p(u) || (l = !1), p(i) || (l = !1), p(d) || (l = !1); n = (l = v("preferred_contact_method") ? l : !1) && a && c && 0 < c.length; s.disabled = !n, m && (c && 0 < c.length ? m.style.display = "none" : (e.value || t.value || o.value) && (m.style.display = "block")) } e && e.addEventListener("submit", function (e) { let t = !0;['input[name="first_name"]', 'input[name="last_name"]', 'input[name="email"]', "#country_code", "#contact_number", "#country", "#enquiry_type", "#consent"].forEach(e => { e = document.querySelector(e); e && !p(e) && (t = !1) }), v("preferred_contact_method") || (t = !1); var o = grecaptcha && grecaptcha.getResponse && grecaptcha.getResponse(); return o && 0 !== o.length ? t ? (s.disabled = !0, void (s.textContent = "Submitting...")) : (e.preventDefault(), alert("Please fill in all required fields correctly."), !1) : (e.preventDefault(), m && (m.style.display = "block"), alert("Please complete the reCAPTCHA verification before submitting."), !1) }), document.querySelectorAll("input, select, textarea").forEach(e => { e.addEventListener("input", function () { p(this), f() }), e.addEventListener("change", function () { p(this), f() }), e.addEventListener("blur", function () { p(this) }) }), document.querySelectorAll('input[name="preferred_contact_method"]').forEach(e => { e.addEventListener("change", function () { v("preferred_contact_method"), f() }) }), u && i && (u.addEventListener("change", g), i.addEventListener("blur", g)), d && d.addEventListener("change", function () { p(this), f() }), f(); let t = setInterval(() => { "undefined" != typeof grecaptcha && (clearInterval(t), f()) }, 100) });